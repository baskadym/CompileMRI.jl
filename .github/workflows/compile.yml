name: Compile
on:
  release:
    types: [prereleased]
jobs:
  zip:
    name: Julia 1.7 - ${{ matrix.os }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    if: "contains(github.event.head_commit.message, 'zip')"
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
    steps:
      - name: Get Version
        run: echo "::set-output name=version::test"
        id: version
      - name: Compress
        run: Compress-Archive -Path 'compiled/*' -DestinationPath 'mritools_${{ runner.os }}_${{ steps.version.outputs.version }}.zip'
      - name: Upload as artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./mritools_${{ runner.os }}_${{ steps.version.outputs.version }}.zip
          asset_name: mritools_${{ runner.os }}_${{ steps.version.outputs.version }}.zip
          asset_content_type: application/zip
  tar:
    name: Julia 1.7 - ${{ matrix.os }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-18.04
          - macOS-latest
    steps:
      - name: Get Version
        run: echo "::set-output name=version::test"
        id: version
      - run: mkdir compiled
      - run: echo This is a sample text file > compiled/sample.txt
      - name: Rename
        run: mv compiled mritools_${{ runner.os }}_${{ steps.version.outputs.version }}
      - name: Compress
        run: tar -vczf mritools_${{ runner.os }}_${{ steps.version.outputs.version }}.tar.gz mritools_${{ runner.os }}_${{ steps.version.outputs.version }}
      - name: Upload as artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./mritools_${{ runner.os }}_${{ steps.version.outputs.version }}.tar.gz
          asset_name: mritools_${{ runner.os }}_${{ steps.version.outputs.version }}.tar.gz
          asset_content_type: application/gzip
