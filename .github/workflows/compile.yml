name: Compile
on:
  - push
jobs:
  zip:
    name: Julia 1.7 - ${{ matrix.os }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    if: "contains(github.event.head_commit.message, 'zip')"
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1.7'
          arch: 'x64'
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@latest
      - name: Compile
        run: julia --color=yes --project=@. -e 'using CompileMRI; compile()'
      - name: Get Version
        run: echo "::set-output name=version::$(./compiled/bin/romeo --version)"
        id: version
      - name: Compress
        run: Compress-Archive -Path 'compiled/*' -DestinationPath 'mritools_${{ runner.os }}_${{ steps.version.outputs.version }}.zip'
      - name: Upload as artifact
        uses: actions/upload-artifact@v2
        with:
          name: mritools_${{ runner.os }}_${{ steps.version.outputs.version }}.zip
          path: mritools_${{ runner.os }}_${{ steps.version.outputs.version }}.zip
  Tar:
    name: Julia 1.7 - ${{ matrix.os }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    if: "contains(github.event.head_commit.message, 'tar')"
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-18.04
          - macOS-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1.7'
          arch: 'x64'
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@latest
      - name: Compile
        run: julia --color=yes --project=@. -e 'using CompileMRI; compile()'
      - name: Get Version
        run: echo "::set-output name=version::$(./compiled/bin/romeo --version)"
        id: version
      - name: Compress
        run: tar -vczf mritools_${{ runner.os }}_${{ steps.version.outputs.version }}.tar.gz compiled/*
      - name: Upload as artifact
        uses: actions/upload-artifact@v2
        with:
          name: mritools_${{ runner.os }}_${{ steps.version.outputs.version }}.tar.gz
          path: mritools_${{ runner.os }}_${{ steps.version.outputs.version }}.tar.gz

