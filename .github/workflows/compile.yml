name: Compile
on:
  release:
    types: [published]
jobs:
  compile:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        version:
          - '1.8'
        arch:
          - 'x64'
        include:
          - os: windows-latest
            version: '1.6'
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/julia-buildpkg@latest
      - name: Compile
        run: julia --color=yes --project=@. -e 'using CompileMRI; compile()'
      - name: Get Version
        run: echo "::set-output name=version::$(julia --project=@. -e 'using CompileMRI; println(CompileMRI.mritools_version())')"
        id: version
      - name: Compress Unix
        if: ${{ runner.os != 'Windows' }}
        run: |
          echo "ZIP_ENDING=tar.gz" >> $GITHUB_ENV
          echo "ZIP_TYPE=gzip" >> $GITHUB_ENV
          mv compiled mritools_${{ runner.os }}_${{ steps.version.outputs.version }}
          tar -vczf mritools_${{ runner.os }}_${{ steps.version.outputs.version }}.tar.gz mritools_${{ runner.os }}_${{ steps.version.outputs.version }}
      - name: Compress Windows
        if: ${{ runner.os == 'Windows' }}
        run: |
          echo "ZIP_ENDING=zip" >> $env:GITHUB_ENV
          echo "ZIP_TYPE=zip" >> $env:GITHUB_ENV
          Compress-Archive -Path 'compiled/*' -DestinationPath 'mritools_${{ runner.os }}_${{ steps.version.outputs.version }}.zip'
      - name: Upload release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./mritools_${{ runner.os }}_${{ steps.version.outputs.version }}.${{ env.ZIP_ENDING }}
          asset_name: mritools_${{ runner.os }}_${{ steps.version.outputs.version }}.${{ env.ZIP_ENDING }}
          asset_content_type: application/${{ env.ZIP_TYPE }}
